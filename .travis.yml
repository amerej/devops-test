dist: trusty
sudo: required
os: linux

services:
  - docker

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    # - TAG=${TRAVIS_TAG:=${TRAVIS_COMMIT}}
    # - IMAGE_NAME=traviscontroller
    - SHA=$(git rev-parse HEAD)

before_install:
  # install nsenter for helm and port forwarding
  - sudo apt-get -qq update
  - sudo apt-get install -y socat
  - docker run --rm jpetazzo/nsenter cat /nsenter > /tmp/nsenter && chmod +x /tmp/nsenter
  - sudo cp /tmp/nsenter /usr/local/bin

install:
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.4/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.9.4 --extra-config=apiserver.Authorization.Mode=RBAC
  # Fix the kubectl context, as it's often stale.
  - minikube update-context
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
  # Add missing permission for dashboard when RBAC is activated
  - kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
  - kubectl get nodes
  - kubectl get pods --all-namespaces
  - curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
  - kubectl -n kube-system create sa tiller
  - kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
  - helm init --service-account tiller
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker build -t amerej/vuejs-test -f ./client/Dockerfile.dev ./client

script:
  - docker run amerej/vuejs-test yarn test:unit -- --coverage

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
